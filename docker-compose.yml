version: '3.8'
services:
  app:
    build: .
    ports:
      - "8080:8080"
    networks:
      - doc-network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - uploads:/app/uploads
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/document_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      SPRING_DATA_ELASTICSEARCH_HOSTS: http://elasticsearch:9200

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: document_db
    ports:
      - "5432:5432"
    networks:
      - doc-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - doc-network
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  ocr-worker:
    build: .
    environment:
      SPRING_PROFILES_ACTIVE: ocr
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    networks:
      - doc-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - uploads:/app/uploads

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./ui:/usr/share/nginx/html
      - ./ui/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - doc-network
    depends_on:
      - app

elasticsearch:
  image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
  environment:
    - discovery.type=single-node
    - ES_JAVA_OPTS=-Xms512m -Xmx512m
    - xpack.security.enabled=false
    - xpack.security.http.ssl.enabled=false
    - bootstrap.memory_lock=true
  volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data
  ports:
    - "9200:9200"
    - "9300:9300"
  networks:
    - doc-network
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 65536
      hard: 65536
  healthcheck:
    test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
    interval: 30s
    timeout: 10s
    retries: 3
